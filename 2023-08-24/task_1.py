# 6.1[30]: Напишите программу, генерирующую элементы арифметической прогрессии
# Программа принимает от пользователя три числа :
# Первый элемент прогрессии, Разность (шаг) и Количество элементов
# Формула для получения n-го члена прогрессии: an = a1 + (n-1) * d.
# Напишите функцию
# - Аргументы: три указанных параметра
# - Возвращает: список элементов арифмитической прогрессии.
# Примеры/Тесты:
# Ввод: 7 2 5
# Вывод: [7 9 11 13 15]
# Ввод: 2 3 12
# Вывод: [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35]
# (*) Усложнение. Для формирования списка внутри функции используйте Comprehension
# (**) Усложнение. Присвоение значений переменным a1,d,n запишите, используя только один input, в одну строку, вам понадобится распаковка и Comprehension или map

# Вариант с рекурсией
def arith_progression_recursion(a1: int, d: int, n: int) -> list:
    if n == 1:
        return [a1]
    prev_items = arith_progression_recursion(a1, d, n-1)
    return prev_items + [a1 + (n-1) * d]

print(arith_progression_recursion(7, 2, 5))

# Вариант с циклами
def arith_progression():
    a1, d, n = map(int, input("Укажите через запятую значения параметров арифметической прогрессии - a1, d, n: ").split(','))
    result = []
    result += [a1 + step * d for step in range(n)]
    return result

print(arith_progression())